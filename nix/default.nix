{ sources ? import ./sources.nix
, nixpkgs ? sources.nixpkgs
, system ? builtins.currentSystem
}:
let
  overlay =
    _: pkgs:
    let
      run = pkgs.callPackage ./run.nix { inherit tools; };
      tools = pkgs.callPackage ./tools.nix { };
    in
    rec {
      inherit (pkgs) nixfmt niv ormolu nixpkgs-fmt nix-linter;
      hindent = pkgs.haskell.lib.enableSeparateBinOutput pkgs.haskellPackages.hindent;
      cabal-fmt = pkgs.haskell.lib.enableSeparateBinOutput pkgs.haskellPackages.cabal-fmt;
      inherit tools;
      # Flake style attributes
      packages = {
        inherit tools run;
        inherit (pkgs.gitAndTools) pre-commit;
      };
      checks = tools // {
        # A pre-commit-check for nix-pre-commit itself
        pre-commit-check = run {
          src = ../.;
          hooks = {
            shellcheck.enable = true;
            nixpkgs-fmt.enable = true;
          };
          excludes = [
            # autogenerated by niv
            "nix/sources.nix$"
          ];
        };
      };
    };
in
import nixpkgs {
  overlays = [ overlay ];
  # broken is needed for hindent to build
  config = { allowBroken = true; };
  inherit system;
}
